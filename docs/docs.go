// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/stories/{type}": {
            "get": {
                "description": "Get stories from Hacker News based on type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stories"
                ],
                "summary": "Get stories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Story type (top/show/ask)",
                        "name": "type",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Story"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Failed to fetch stories"
                }
            }
        },
        "main.Story": {
            "type": "object",
            "properties": {
                "comments_url": {
                    "type": "string",
                    "example": "https://news.ycombinator.com/item?id=123456"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 123456
                },
                "points": {
                    "type": "integer",
                    "example": 100
                },
                "submitted_by": {
                    "type": "string",
                    "example": "johndoe"
                },
                "title": {
                    "type": "string",
                    "example": "Show HN: My Cool Project"
                },
                "type": {
                    "description": "\"top\", \"show\", \"ask\"",
                    "type": "string",
                    "example": "show"
                },
                "url": {
                    "type": "string",
                    "example": "https://github.com/cool/project"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Hackers API",
	Description:      "A simple API that mirrors Hacker News content",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
