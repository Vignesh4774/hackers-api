apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: CI verification workflow
on:
  push:
    branches:
      - "**"
  workflow_dispatch:
jobs:
  verify:
    if: ${{ cloudbees.scm.branch != 'main' }}
    env:
        MIN_COVERAGE: "65"
        COVER: "coverage.out"
    outputs:
      CODE_COVERAGE: ${{ steps.RunUnitTest.outputs.CODE_COVERAGE }}
    steps:
      - uses: cloudbees-io/checkout@v1
        name: Get source code

      - name: Run tests
        id: RunUnitTest
        kind: test
        uses: docker://golang:1.23
        run: |
          # set -o pipefail
          go install github.com/jstemmer/go-junit-report@latest
          go install github.com/swaggo/swag/cmd/swag@latest
          swag init
          go test -v -timeout 15m -coverprofile=$COVER ./... | tee ./test.log
          test_status_code=${PIPESTATUS[0]}
          cat ./test.log | go-junit-report >./test.xml
          cat coverage.out >> $CLOUDBEES_OUTPUTS/CODE_COVERAGE

          if [ $test_status_code -eq 0 ]; then
            echo "Go Test Passed"
          else
            echo "Go Test Failed exit code $test_status_code"
            exit 1
          fi

          echo "__________________ OUTPUTS __________________"
          echo "NOTICE: test.log (go test), $COVER (gocov), test.xml (JUnit) are available in the workspace."
      
      - name: Coverage check
        uses: docker://golang:1.23
        
        run: |
          echo "__________________ COVERAGE CHECK __________________"
          coverage=$(go tool cover -func=$COVER | grep -E '^total:' | awk '{print $3}')
          echo "Unit test Coverage is: $coverage"
          coverage="${coverage%?}"
          if [ -z "$coverage" ]; then
              echo "No coverage information found. Tests might have failed."
              exit 1
          elif awk -v cov="$coverage" -v min_cov="$MIN_COVERAGE" 'BEGIN { exit (cov < min_cov) }'; then
              echo "All tests passed and coverage is greater than $MIN_COVERAGE%."
          else
              echo "Coverage is less than $MIN_COVERAGE%."
              exit 1
          fi
      
      - name: Run build
        kind: build
        uses: docker://golang:1.23
        run: |
          go install github.com/swaggo/swag/cmd/swag@latest
          swag init
          go build

      - name: Publish test results
        if: ${{ always() }}
        uses: cloudbees-io/publish-test-results@v1
        with:
          folder-name: ${{ cloudbees.workspace }}/test.xml
          test-type: go
        
      - name: Publish evidence
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: |-
            ## Test code coverage
            ${{ steps.RunUnitTest.outputs.CODE_COVERAGE }}
          format: MARKDOWN
  
